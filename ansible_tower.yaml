tosca_definitions_version: cloudify_dsl_1_3

description: >
  Example for using Ansible Tower plugin.

imports:
  - http://cloudify.co/spec/cloudify/6.3.1/types.yaml
  - plugin:cloudify-ansible-tower-plugin

inputs:

  ansible_tower_endpoint:
    type: string
    default: https://35.157.110.153

  ansible_tower_endpoint_verify:
    type: boolean
    default: false

  ansible_tower_organization_id:
    type: integer
    default: 1
    display_label: Ansible Tower Organization ID

  ansible_tower_scm_url:
    type: string
    default: 'https://github.com/jakubcierlik/exl-example-playbook.git'
    description: |
      Github repository containing Ansible Playbooks.
    display_label: Ansible Tower SCM URL Containing Ansible Playbook

  ansible_tower_playbook_name:
    type: string
    default: 'playbook.yaml'
    description: |
      Name of the Ansible Playbook from SCM URL that should be executed.
    display_label: Ansible Playbook Name

  ec2_instance_deployment_id:
    type: string
    display_label: EC2 Instance Deployment ID

  ec2_username:
    type: string
    default: ubuntu
    display_label: EC2 Instance User Name

dsl_definitions:

  client_config: &client_config
    endpoint: { get_input: ansible_tower_endpoint }
    access_token: { get_secret: ANSIBLE_TOWER_TOKEN }
    endpoint_verify: { get_input: ansible_tower_endpoint_verify }


node_templates:

  organization:
    type: cloudify.ansible_tower.nodes.Organization
    properties:
      use_external_resource: true
      resource_id: { get_input: ansible_tower_organization_id }
      client_config: *client_config

  inventory:
    type: cloudify.ansible_tower.nodes.Inventory
    properties:
      resource_config:
        name: Cloudify_inventory
        description: 'Inventory created by Cloudify'
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.contained_in_organization
      target: organization

  host:
    type: cloudify.ansible_tower.nodes.Host
    properties:
      resource_config:
        name: { get_capability: [{ get_input: ec2_instance_deployment_id }, instance_public_ip] }
        description: |
          EC2 instance created by cloudify-ansible-tower plugin
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.contained_in_inventory
      target: inventory

  project:
    type: cloudify.ansible_tower.nodes.Project
    properties:
      resource_config:
        name: Cloudify_project
        description: 'Project for Cloudify POC'
        scm_type: git
        scm_url: { get_input: ansible_tower_scm_url }
        scm_update_on_launch: false
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.contained_in_organization
      target: organization

  credential:
    type: cloudify.ansible_tower.nodes.Credential
    properties:
      resource_config:
        name: EC2_credentials
        description: 'Credentials to access the EC2 created by Cloudify'
        credential_type: Machine
        inputs:
          username: { get_input: ec2_username }
          ssh_key_data: { get_secret: SSH_KEY_DATA }
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.contained_in_organization
      target: organization

  job_template:
    type: cloudify.ansible_tower.nodes.JobTemplate
    properties:
      resource_config:
        name: create_file
        description: 'Creates an empty file on EC2 instance'
        job_type: run
        timeout: 10
        playbook: { get_input: ansible_tower_playbook_name }
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.contained_in_project
      target: project
    - type: cloudify.ansible_tower.relationships.connected_to_inventory
      target: inventory
    - type: cloudify.ansible_tower.relationships.job_template_connected_to_credential
      target: credential
    - type: cloudify.relationships.depends_on
      target: host

  job:
    type: cloudify.ansible_tower.nodes.Job
    properties:
      client_config: *client_config
    relationships:
    - type: cloudify.ansible_tower.relationships.job_contained_in_job_template
      target: job_template


capabilities:

  organization_id:
    value: { get_attribute: [organization, resource_id] }

  inventory_id:
    value: { get_attribute: [inventory, resource_id] }

  host_id:
    value: { get_attribute: [host, resource_id] }

  project_id:
    value: { get_attribute: [project, resource_id] }

  credential_id:
    value: { get_attribute: [credential, resource_id] }

  job_template_id:
    value: { get_attribute: [job_template, resource_id] }

  job_id:
    value: { get_attribute: [job, resource_id] }
